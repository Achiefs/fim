name: System tests
on: [push]
jobs:
  monitor-system-tests-unix:
    runs-on: ubuntu-20.04

    steps:
      - name: Check out repository code, branch='${{ github.ref }}'
        uses: actions/checkout@v2

      - name: Install pytest
        run: pip3 install pytest

      - name: Build FIM
        run: cargo build --release

      - name: Change configuration to test on Linux
        if: runner.os == 'Linux'
        run: sed -i 's|usr/bin/.*|tmp/test|g' config/linux/config.yml

      - name: Change configuration to test on macOS
        if: runner.os == 'macOS'
        run: sed -i '' 's|usr/bin.*|tmp/test|g' config/linux/config.yml

      - name: Copy FIM binary to main folder
        run: cp ./target/release/fim ./

      - name: Create required directories
        run: mkdir -p /tmp/test

      - name: Create events file and folder
        run: sudo mkdir -p /var/lib/fim/ && sudo touch /var/lib/fim/events.json && sudo chown -R runner:runner /var/lib/fim

      - name: Create log file and folder
        run: sudo mkdir -p /var/log/fim/ && sudo touch /var/log/fim/fim.log && sudo chown -R runner:runner /var/log/fim

      - name: Start FIM process
        run: sudo ./fim &

      - name: Launch test suite
        run: python3 -m pytest test/system/monitor.py -v --noconftest

      - name: Print events.json file
        if: always()
        run: cat /var/lib/fim/events.json

      - run: echo "Job's status is ${{ job.status }}."

  audit-system-tests-centos7:
    runs-on:
      group: centos7
    env:
      repodir: ${{ github.workspace }}/${{ github.run_id }}

    steps:
      - name: Check out repository code, branch='${{ github.ref }}'
        run: git clone https://github.com/${{ github.repository }}.git -b ${{ github.ref_name }} $repodir

      - name: Build FIM
        run: /home/okynos/.cargo/bin/cargo build --release
        working-directory: ${{ github.run_id }}

      - name: Copy configuration
        run: cp -f test/system/audit_config.yml config/linux/config.yml
        working-directory: ${{ github.run_id }}

      - name: Copy FIM binary to main folder
        run: cp ./target/release/fim ./
        working-directory: ${{ github.run_id }}

      - name: Create required directories
        run: mkdir -p /tmp/test

      - name: Create events file and folder
        run: sudo mkdir -p /var/lib/fim/ && sudo touch /var/lib/fim/events.json && sudo chown -R okynos:okynos /var/lib/fim

      - name: Create log file and folder
        run: sudo mkdir -p /var/log/fim/ && sudo touch /var/log/fim/fim.log && sudo chown -R okynos:okynos /var/log/fim

      - name: Start FIM process
        run: sudo ./fim &
        working-directory: ${{ github.run_id }}

      - name: Check FIM running
        run: sleep 5 && ps a | grep fim | grep -v grep

      - name: Launch test suite
        run: sudo python3 -m pytest test/system/audit.py -v
        working-directory: ${{ github.run_id }}

      - name: Print config file
        if: always()
        run: cat ./config/linux/config.yml || true
        working-directory: ${{ github.run_id }}

      - name: Print log file
        if: always()
        run: cat /var/log/fim/fim.log || true

      - name: Stop FIM process
        if: always()
        run: sudo pkill fim || true

      - name: Clean temporal folder
        if: always()
        run: sudo rm -rf /tmp/test

      - name: Clean log folder
        if: always()
        run: sudo rm -rf /var/log/fim/

      - name: Clean lib folder
        if: always()
        run: sudo rm -rf /var/lib/fim/

      - name: Clean workspace
        if: always()
        run: sudo rm -rf ./test/system/__pycache__/ ./test/system/.pytest_cache ./.pytest_cache
        working-directory: ${{ github.run_id }}

      - name: Clean test output
        if: always()
        run: sudo rm -rf ./test_*
        working-directory: ${{ github.run_id }}

      - name: Remove repository
        if: always()
        run: sudo rm -rf $repodir

      - run: echo "Job's status is ${{ job.status }}."